{"ast":null,"code":"var _jsxFileName = \"/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require(\"lodash\");\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = props => {\n  _s();\n\n  const [onCreateMovie, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date())\n      }\n    });\n    setTitle(\"\");\n    setRating(\"0\");\n    setDescription_intro(\"\");\n    setLanguage(\"en\");\n    setMedium_cover_image(\"\");\n    setGenres([]);\n  }\n\n  console.log(\"create >>> \", loading, error, data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: \"100%\"\n        },\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654\\uBA85 \\uC785\\uB825\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          width: \"100%\"\n        },\n        minLength: \"3\",\n        placeholder: \"\\uC601\\uD654\\uC124\\uBA85 \\uC785\\uB825\",\n        rows: \"6\",\n        value: description_intro,\n        onChange: e => {\n          setDescription_intro(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          marginRight: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: \"3px\"\n          },\n          children: \"\\uD3C9\\uC810\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            flex: 1\n          },\n          value: rating,\n          onChange: e => {\n            setRating(e.target.value);\n          },\n          children: ratingMap.map((rating, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: rating,\n              children: rating\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: \"3px\"\n          },\n          children: \"\\uC5B8\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            flex: 1\n          },\n          value: language,\n          onChange: e => {\n            setLanguage(e.target.value);\n          },\n          children: languageMap.map((lang, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang,\n              children: lang\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: genresMap.map((_genres, i) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: _genres,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: _genres,\n              checked: genres.includes(_genres),\n              onChange: e => {\n                if (genres.includes(e.target.id)) {\n                  const index = genres.indexOf(e.target.id);\n                  let arr = genres;\n                  arr.splice(index, 1);\n                  setGenres(_.union(arr, genres));\n                } else {\n                  let arr = [];\n                  arr.push(e.target.id);\n                  setGenres(_.union(arr, genres));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), _genres]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654\\uD3EC\\uC2A4\\uD130 \\uC774\\uBBF8\\uC9C0 \\uB9C1\\uD06C \\uC785\\uB825\",\n        value: medium_cover_image,\n        onChange: e => {\n          setMedium_cover_image(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        onCreate();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"SKw6gZ1nsauJXf+NL/kEyNlGGP8=\", false, function () {\n  return [useMutation];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js"],"names":["React","useState","gql","useMutation","v4","uuidv4","_","require","CREATE_MOVIE","Create","props","onCreateMovie","loading","error","data","title","setTitle","rating","setRating","description_intro","setDescription_intro","language","setLanguage","medium_cover_image","setMedium_cover_image","genres","setGenres","ratingMap","languageMap","genresMap","onCreate","variables","id","Number","postedAt","String","Date","updatedAt","console","log","display","flexDirection","width","e","target","value","flex","marginRight","map","i","lang","_genres","includes","index","indexOf","arr","splice","union","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst _ = require(\"lodash\");\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = (props) => {\n  const [onCreateMovie, { loading, error, data }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date()),\n      },\n    });\n    setTitle(\"\");\n    setRating(\"0\");\n    setDescription_intro(\"\");\n    setLanguage(\"en\");\n    setMedium_cover_image(\"\");\n    setGenres([]);\n  }\n\n  console.log(\"create >>> \", loading, error, data);\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <div>\n        <input\n          style={{ width: \"100%\" }}\n          type=\"text\"\n          placeholder=\"영화명 입력\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <textarea\n          style={{ width: \"100%\" }}\n          minLength=\"3\"\n          placeholder=\"영화설명 입력\"\n          rows=\"6\"\n          value={description_intro}\n          onChange={(e) => {\n            setDescription_intro(e.target.value);\n          }}\n        />\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: 1, display: \"flex\", marginRight: \"5px\" }}>\n          <span style={{ marginRight: \"3px\" }}>평점</span>\n          <select\n            style={{ flex: 1 }}\n            value={rating}\n            onChange={(e) => {\n              setRating(e.target.value);\n            }}\n          >\n            {ratingMap.map((rating, i) => {\n              return (\n                <option key={i} value={rating}>\n                  {rating}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div style={{ flex: 1, display: \"flex\" }}>\n          <span style={{ marginRight: \"3px\" }}>언어</span>\n          <select\n            style={{ flex: 1 }}\n            value={language}\n            onChange={(e) => {\n              setLanguage(e.target.value);\n            }}\n          >\n            {languageMap.map((lang, i) => {\n              return (\n                <option key={i} value={lang}>\n                  {lang}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n      <div>\n        {genresMap.map((_genres, i) => {\n          return (\n            <span key={i}>\n              <label htmlFor={_genres}>\n                <input\n                  type=\"checkbox\"\n                  id={_genres}\n                  checked={genres.includes(_genres)}\n                  onChange={(e) => {\n                    if (genres.includes(e.target.id)) {\n                      const index = genres.indexOf(e.target.id);\n                      let arr = genres;\n                      arr.splice(index, 1);\n                      setGenres(_.union(arr, genres));\n                    } else {\n                      let arr = [];\n                      arr.push(e.target.id);\n                      setGenres(_.union(arr, genres));\n                    }\n                  }}\n                />\n                {_genres}\n              </label>\n            </span>\n          );\n        })}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"영화포스터 이미지 링크 입력\"\n          value={medium_cover_image}\n          onChange={(e) => {\n            setMedium_cover_image(e.target.value);\n          }}\n        />\n      </div>\n      <div\n        onClick={() => {\n          onCreate();\n        }}\n      >\n        <span>create</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}