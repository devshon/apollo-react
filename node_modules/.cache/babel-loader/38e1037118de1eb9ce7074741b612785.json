{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_server_express_1 = require(\"apollo-server-express\");\n\nvar graphql_upload_1 = require(\"graphql-upload\");\n\nvar bodyParser = require(\"body-parser-graphql\");\n\nvar cors = require(\"cors\");\n\nvar express = require(\"express\");\n\nvar fs = require(\"fs\");\n\nvar graphql_1 = require(\"graphql\");\n\nvar graphql_import_1 = require(\"graphql-import\");\n\nvar graphql_deduplicator_1 = require(\"graphql-deduplicator\");\n\nvar graphql_playground_middleware_express_1 = require(\"graphql-playground-middleware-express\");\n\nvar graphql_tools_1 = require(\"graphql-tools\");\n\nvar graphql_middleware_1 = require(\"graphql-middleware\");\n\nvar http_1 = require(\"http\");\n\nvar https_1 = require(\"https\");\n\nvar path = require(\"path\");\n\nvar subscriptions_transport_ws_1 = require(\"subscriptions-transport-ws\");\n\nvar defaultErrorFormatter_1 = require(\"./defaultErrorFormatter\");\n\nvar graphql_tools_2 = require(\"graphql-tools\");\n\nexports.MockList = graphql_tools_2.MockList;\n\nvar graphql_subscriptions_1 = require(\"graphql-subscriptions\");\n\nexports.PubSub = graphql_subscriptions_1.PubSub;\nexports.withFilter = graphql_subscriptions_1.withFilter;\n\nvar lambda_1 = require(\"./lambda\");\n\nexports.GraphQLServerLambda = lambda_1.GraphQLServerLambda;\n\nvar GraphQLServer =\n/** @class */\nfunction () {\n  function GraphQLServer(props) {\n    this.subscriptionServerOptions = null;\n    this.options = {\n      tracing: {\n        mode: 'http-header'\n      },\n      port: process.env.PORT || 4000,\n      deduplicator: true,\n      endpoint: '/',\n      subscriptions: '/',\n      playground: '/',\n      getEndpoint: false\n    };\n    this.middlewareFragmentReplacements = [];\n    this.middlewares = {\n      use: [],\n      get: [],\n      post: []\n    };\n    this.express = express();\n    this.subscriptionServer = null;\n    this.context = props.context;\n\n    if (props.schema) {\n      this.executableSchema = props.schema;\n    } else if (props.typeDefs && props.resolvers) {\n      var directiveResolvers = props.directiveResolvers,\n          schemaDirectives = props.schemaDirectives,\n          resolvers = props.resolvers,\n          resolverValidationOptions = props.resolverValidationOptions,\n          typeDefs = props.typeDefs,\n          mocks = props.mocks;\n      var typeDefsString = mergeTypeDefs(typeDefs);\n      var uploadMixin = typeDefsString.includes('scalar Upload') ? {\n        Upload: graphql_upload_1.GraphQLUpload\n      } : {};\n      this.executableSchema = graphql_tools_1.makeExecutableSchema({\n        directiveResolvers: directiveResolvers,\n        schemaDirectives: schemaDirectives,\n        typeDefs: typeDefsString,\n        resolvers: Array.isArray(resolvers) ? [uploadMixin].concat(resolvers) : [uploadMixin, resolvers],\n        resolverValidationOptions: resolverValidationOptions\n      });\n\n      if (mocks) {\n        graphql_tools_1.addMockFunctionsToSchema({\n          schema: this.executableSchema,\n          mocks: typeof mocks === 'object' ? mocks : undefined,\n          preserveResolvers: false\n        });\n      }\n    }\n\n    if (props.middlewares) {\n      var _a = graphql_middleware_1.applyMiddleware.apply(void 0, [this.executableSchema].concat(props.middlewares)),\n          schema = _a.schema,\n          fragmentReplacements = _a.fragmentReplacements;\n\n      this.executableSchema = schema;\n      this.middlewareFragmentReplacements = fragmentReplacements;\n    }\n  }\n\n  GraphQLServer.prototype.use = function (path) {\n    var handlers = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      handlers[_i - 1] = arguments[_i];\n    }\n\n    this.middlewares.use.push({\n      path: path,\n      handlers: handlers\n    });\n    return this;\n  };\n\n  GraphQLServer.prototype.get = function (path) {\n    var handlers = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      handlers[_i - 1] = arguments[_i];\n    }\n\n    this.middlewares.get.push({\n      path: path,\n      handlers: handlers\n    });\n    return this;\n  };\n\n  GraphQLServer.prototype.post = function (path) {\n    var handlers = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      handlers[_i - 1] = arguments[_i];\n    }\n\n    this.middlewares.post.push({\n      path: path,\n      handlers: handlers\n    });\n    return this;\n  };\n\n  GraphQLServer.prototype.createHttpServer = function (options) {\n    var _this = this;\n\n    var app = this.express;\n    this.options = __assign({}, this.options, options);\n\n    if (this.options.subscriptions) {\n      this.subscriptionServerOptions = typeof this.options.subscriptions === 'string' ? {\n        path: this.options.subscriptions\n      } : __assign({\n        path: '/'\n      }, this.options.subscriptions);\n    }\n\n    var tracing = function (req) {\n      var t = _this.options.tracing;\n\n      if (typeof t === 'boolean') {\n        return t;\n      } else if (t.mode === 'http-header') {\n        return req.get('x-apollo-tracing') !== undefined;\n      } else {\n        return t.mode === 'enabled';\n      }\n    };\n\n    var formatResponse = function (req) {\n      if (!_this.options.deduplicator) {\n        return _this.options.formatResponse;\n      }\n\n      return function (response) {\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n\n        var _a;\n\n        if (req.get('X-GraphQL-Deduplicate') && response.data && !response.data.__schema) {\n          response.data = graphql_deduplicator_1.deflate(response.data);\n        }\n\n        return _this.options.formatResponse ? (_a = _this.options).formatResponse.apply(_a, [response].concat(args)) : response;\n      };\n    }; // CORS support\n\n\n    if (this.options.cors) {\n      app.use(cors(this.options.cors));\n    } else if (this.options.cors !== false) {\n      app.use(cors());\n    }\n\n    app.post(this.options.endpoint, bodyParser.graphql(this.options.bodyParserOptions));\n\n    if (this.options.uploads) {\n      app.post(this.options.endpoint, graphql_upload_1.graphqlUploadExpress(this.options.uploads));\n    } else if (this.options.uploads !== false) {\n      app.post(this.options.endpoint, graphql_upload_1.graphqlUploadExpress());\n    } // All middlewares added before start() was called are applied to\n    // the express application here, in the order they were provided\n    // (following Queue pattern)\n\n\n    while (this.middlewares.use.length > 0) {\n      var middleware = this.middlewares.use.shift();\n\n      if (middleware.path) {\n        app.use.apply(app, [middleware.path].concat(middleware.handlers));\n      } else {\n        app.use.apply(app, middleware.handlers);\n      }\n    }\n\n    while (this.middlewares.get.length > 0) {\n      var middleware = this.middlewares.get.shift();\n\n      if (middleware.path) {\n        app.get.apply(app, [middleware.path].concat(middleware.handlers));\n      }\n    }\n\n    while (this.middlewares.post.length > 0) {\n      var middleware = this.middlewares.post.shift();\n\n      if (middleware.path) {\n        app.post.apply(app, [middleware.path].concat(middleware.handlers));\n      }\n    }\n\n    app.post(this.options.endpoint, apollo_server_express_1.graphqlExpress(function (request, response) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var context, _a, e_1;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _b.trys.push([0, 4,, 5]);\n\n              if (!(typeof this.context === 'function')) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.context({\n                request: request,\n                response: response,\n                fragmentReplacements: this.middlewareFragmentReplacements\n              })];\n\n            case 1:\n              _a = _b.sent();\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              _a = this.context;\n              _b.label = 3;\n\n            case 3:\n              context = _a;\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              e_1 = _b.sent();\n              console.error(e_1);\n              throw e_1;\n\n            case 5:\n              return [2\n              /*return*/\n              , {\n                schema: this.executableSchema,\n                tracing: tracing(request),\n                cacheControl: this.options.cacheControl,\n                formatError: this.options.formatError || defaultErrorFormatter_1.defaultErrorFormatter,\n                logFunction: this.options.logFunction,\n                rootValue: this.options.rootValue,\n                validationRules: typeof this.options.validationRules === 'function' ? this.options.validationRules(request, response) : this.options.validationRules,\n                fieldResolver: this.options.fieldResolver || graphql_tools_1.defaultMergedResolver,\n                formatParams: this.options.formatParams,\n                formatResponse: formatResponse(request),\n                debug: this.options.debug,\n                context: context\n              }];\n          }\n        });\n      });\n    })); // Only add GET endpoint if opted in\n\n    if (this.options.getEndpoint) {\n      app.get(this.options.getEndpoint === true ? this.options.endpoint : this.options.getEndpoint, apollo_server_express_1.graphqlExpress(function (request, response) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var context, _a, e_2;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                _b.trys.push([0, 4,, 5]);\n\n                if (!(typeof this.context === 'function')) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.context({\n                  request: request,\n                  response: response\n                })];\n\n              case 1:\n                _a = _b.sent();\n                return [3\n                /*break*/\n                , 3];\n\n              case 2:\n                _a = this.context;\n                _b.label = 3;\n\n              case 3:\n                context = _a;\n                return [3\n                /*break*/\n                , 5];\n\n              case 4:\n                e_2 = _b.sent();\n                console.error(e_2);\n                throw e_2;\n\n              case 5:\n                return [2\n                /*return*/\n                , {\n                  schema: this.executableSchema,\n                  tracing: tracing(request),\n                  cacheControl: this.options.cacheControl,\n                  formatError: this.options.formatError || defaultErrorFormatter_1.defaultErrorFormatter,\n                  logFunction: this.options.logFunction,\n                  rootValue: this.options.rootValue,\n                  validationRules: this.options.validationRules,\n                  fieldResolver: this.options.fieldResolver || graphql_tools_1.defaultMergedResolver,\n                  formatParams: this.options.formatParams,\n                  formatResponse: this.options.formatResponse,\n                  debug: this.options.debug,\n                  context: context\n                }];\n            }\n          });\n        });\n      }));\n    }\n\n    if (this.options.playground) {\n      var playgroundOptions = {\n        endpoint: this.options.endpoint,\n        subscriptionsEndpoint: this.subscriptionServerOptions ? this.subscriptionServerOptions.path : undefined,\n        tabs: this.options.defaultPlaygroundQuery ? [{\n          endpoint: this.options.endpoint,\n          query: this.options.defaultPlaygroundQuery\n        }] : undefined\n      };\n      app.get(this.options.playground, graphql_playground_middleware_express_1.default(playgroundOptions));\n    }\n\n    if (!this.executableSchema) {\n      throw new Error('No schema defined');\n    }\n\n    var server = this.options.https ? https_1.createServer(this.options.https, app) : http_1.createServer(app);\n\n    if (this.subscriptionServerOptions) {\n      this.createSubscriptionServer(server);\n    }\n\n    return server;\n  };\n\n  GraphQLServer.prototype.start = function (optionsOrCallback, callback) {\n    var _this = this;\n\n    var options = optionsOrCallback && typeof optionsOrCallback === 'function' ? {} : optionsOrCallback;\n    var callbackFunc = callback ? callback : optionsOrCallback && typeof optionsOrCallback === 'function' ? optionsOrCallback : function () {\n      return null;\n    };\n    var server = this.createHttpServer(options);\n    return new Promise(function (resolve, reject) {\n      var combinedServer = server;\n      combinedServer.listen(_this.options.port, function () {\n        callbackFunc(__assign({}, _this.options, {\n          port: combinedServer.address().port\n        }));\n        resolve(combinedServer);\n      });\n    });\n  };\n\n  GraphQLServer.prototype.createSubscriptionServer = function (combinedServer) {\n    var _this = this;\n\n    this.subscriptionServer = subscriptions_transport_ws_1.SubscriptionServer.create({\n      schema: this.executableSchema,\n      // TODO remove once `@types/graphql` is fixed for `execute`\n      execute: graphql_1.execute,\n      subscribe: graphql_1.subscribe,\n      onConnect: this.subscriptionServerOptions.onConnect ? this.subscriptionServerOptions.onConnect : function (connectionParams, webSocket) {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return [2\n            /*return*/\n            , __assign({}, connectionParams)];\n          });\n        });\n      },\n      onDisconnect: this.subscriptionServerOptions.onDisconnect,\n      onOperation: function (message, connection, webSocket) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var context, _a, e_3;\n\n          var _this = this;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                // The following should be replaced when SubscriptionServer accepts a formatError\n                // parameter for custom error formatting.\n                // See https://github.com/apollographql/subscriptions-transport-ws/issues/182\n                connection.formatResponse = function (value) {\n                  return __assign({}, value, {\n                    errors: value.errors && value.errors.map(_this.options.formatError || defaultErrorFormatter_1.defaultErrorFormatter)\n                  });\n                };\n\n                _b.label = 1;\n\n              case 1:\n                _b.trys.push([1, 5,, 6]);\n\n                if (!(typeof this.context === 'function')) return [3\n                /*break*/\n                , 3];\n                return [4\n                /*yield*/\n                , this.context({\n                  connection: connection\n                })];\n\n              case 2:\n                _a = _b.sent();\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                _a = this.context;\n                _b.label = 4;\n\n              case 4:\n                context = _a;\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                e_3 = _b.sent();\n                console.error(e_3);\n                throw e_3;\n\n              case 6:\n                return [2\n                /*return*/\n                , __assign({}, connection, {\n                  context: context\n                })];\n            }\n          });\n        });\n      },\n      keepAlive: this.subscriptionServerOptions.keepAlive\n    }, {\n      server: combinedServer,\n      path: this.subscriptionServerOptions.path\n    });\n  };\n\n  return GraphQLServer;\n}();\n\nexports.GraphQLServer = GraphQLServer;\n\nfunction mergeTypeDefs(typeDefs) {\n  if (typeof typeDefs === 'string') {\n    if (typeDefs.endsWith('graphql')) {\n      var schemaPath = path.resolve(typeDefs);\n\n      if (!fs.existsSync(schemaPath)) {\n        throw new Error(\"No schema found for path: \" + schemaPath);\n      }\n\n      return graphql_import_1.importSchema(schemaPath);\n    } else {\n      return typeDefs;\n    }\n  }\n\n  if (typeof typeDefs === 'function') {\n    typeDefs = typeDefs();\n  }\n\n  if (isDocumentNode(typeDefs)) {\n    return graphql_1.print(typeDefs);\n  }\n\n  if (Array.isArray(typeDefs)) {\n    return typeDefs.reduce(function (acc, t) {\n      return acc + '\\n' + mergeTypeDefs(t);\n    }, '');\n  }\n\n  throw new Error('Typedef is not string, function, DocumentNode or array of previous');\n}\n\nfunction isDocumentNode(node) {\n  return node.kind === 'Document';\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apollo_server_express_1 = require(\"apollo-server-express\");\nvar graphql_upload_1 = require(\"graphql-upload\");\nvar bodyParser = require(\"body-parser-graphql\");\nvar cors = require(\"cors\");\nvar express = require(\"express\");\nvar fs = require(\"fs\");\nvar graphql_1 = require(\"graphql\");\nvar graphql_import_1 = require(\"graphql-import\");\nvar graphql_deduplicator_1 = require(\"graphql-deduplicator\");\nvar graphql_playground_middleware_express_1 = require(\"graphql-playground-middleware-express\");\nvar graphql_tools_1 = require(\"graphql-tools\");\nvar graphql_middleware_1 = require(\"graphql-middleware\");\nvar http_1 = require(\"http\");\nvar https_1 = require(\"https\");\nvar path = require(\"path\");\nvar subscriptions_transport_ws_1 = require(\"subscriptions-transport-ws\");\nvar defaultErrorFormatter_1 = require(\"./defaultErrorFormatter\");\nvar graphql_tools_2 = require(\"graphql-tools\");\nexports.MockList = graphql_tools_2.MockList;\nvar graphql_subscriptions_1 = require(\"graphql-subscriptions\");\nexports.PubSub = graphql_subscriptions_1.PubSub;\nexports.withFilter = graphql_subscriptions_1.withFilter;\nvar lambda_1 = require(\"./lambda\");\nexports.GraphQLServerLambda = lambda_1.GraphQLServerLambda;\nvar GraphQLServer = /** @class */ (function () {\n    function GraphQLServer(props) {\n        this.subscriptionServerOptions = null;\n        this.options = {\n            tracing: { mode: 'http-header' },\n            port: process.env.PORT || 4000,\n            deduplicator: true,\n            endpoint: '/',\n            subscriptions: '/',\n            playground: '/',\n            getEndpoint: false,\n        };\n        this.middlewareFragmentReplacements = [];\n        this.middlewares = { use: [], get: [], post: [] };\n        this.express = express();\n        this.subscriptionServer = null;\n        this.context = props.context;\n        if (props.schema) {\n            this.executableSchema = props.schema;\n        }\n        else if (props.typeDefs && props.resolvers) {\n            var directiveResolvers = props.directiveResolvers, schemaDirectives = props.schemaDirectives, resolvers = props.resolvers, resolverValidationOptions = props.resolverValidationOptions, typeDefs = props.typeDefs, mocks = props.mocks;\n            var typeDefsString = mergeTypeDefs(typeDefs);\n            var uploadMixin = typeDefsString.includes('scalar Upload')\n                ? { Upload: graphql_upload_1.GraphQLUpload }\n                : {};\n            this.executableSchema = graphql_tools_1.makeExecutableSchema({\n                directiveResolvers: directiveResolvers,\n                schemaDirectives: schemaDirectives,\n                typeDefs: typeDefsString,\n                resolvers: Array.isArray(resolvers)\n                    ? [uploadMixin].concat(resolvers) : [uploadMixin, resolvers],\n                resolverValidationOptions: resolverValidationOptions,\n            });\n            if (mocks) {\n                graphql_tools_1.addMockFunctionsToSchema({\n                    schema: this.executableSchema,\n                    mocks: typeof mocks === 'object' ? mocks : undefined,\n                    preserveResolvers: false,\n                });\n            }\n        }\n        if (props.middlewares) {\n            var _a = graphql_middleware_1.applyMiddleware.apply(void 0, [this.executableSchema].concat(props.middlewares)), schema = _a.schema, fragmentReplacements = _a.fragmentReplacements;\n            this.executableSchema = schema;\n            this.middlewareFragmentReplacements = fragmentReplacements;\n        }\n    }\n    GraphQLServer.prototype.use = function (path) {\n        var handlers = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            handlers[_i - 1] = arguments[_i];\n        }\n        this.middlewares.use.push({ path: path, handlers: handlers });\n        return this;\n    };\n    GraphQLServer.prototype.get = function (path) {\n        var handlers = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            handlers[_i - 1] = arguments[_i];\n        }\n        this.middlewares.get.push({ path: path, handlers: handlers });\n        return this;\n    };\n    GraphQLServer.prototype.post = function (path) {\n        var handlers = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            handlers[_i - 1] = arguments[_i];\n        }\n        this.middlewares.post.push({ path: path, handlers: handlers });\n        return this;\n    };\n    GraphQLServer.prototype.createHttpServer = function (options) {\n        var _this = this;\n        var app = this.express;\n        this.options = __assign({}, this.options, options);\n        if (this.options.subscriptions) {\n            this.subscriptionServerOptions =\n                typeof this.options.subscriptions === 'string'\n                    ? { path: this.options.subscriptions }\n                    : __assign({ path: '/' }, this.options.subscriptions);\n        }\n        var tracing = function (req) {\n            var t = _this.options.tracing;\n            if (typeof t === 'boolean') {\n                return t;\n            }\n            else if (t.mode === 'http-header') {\n                return req.get('x-apollo-tracing') !== undefined;\n            }\n            else {\n                return t.mode === 'enabled';\n            }\n        };\n        var formatResponse = function (req) {\n            if (!_this.options.deduplicator) {\n                return _this.options.formatResponse;\n            }\n            return function (response) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                var _a;\n                if (req.get('X-GraphQL-Deduplicate') &&\n                    response.data &&\n                    !response.data.__schema) {\n                    response.data = graphql_deduplicator_1.deflate(response.data);\n                }\n                return _this.options.formatResponse\n                    ? (_a = _this.options).formatResponse.apply(_a, [response].concat(args)) : response;\n            };\n        };\n        // CORS support\n        if (this.options.cors) {\n            app.use(cors(this.options.cors));\n        }\n        else if (this.options.cors !== false) {\n            app.use(cors());\n        }\n        app.post(this.options.endpoint, bodyParser.graphql(this.options.bodyParserOptions));\n        if (this.options.uploads) {\n            app.post(this.options.endpoint, graphql_upload_1.graphqlUploadExpress(this.options.uploads));\n        }\n        else if (this.options.uploads !== false) {\n            app.post(this.options.endpoint, graphql_upload_1.graphqlUploadExpress());\n        }\n        // All middlewares added before start() was called are applied to\n        // the express application here, in the order they were provided\n        // (following Queue pattern)\n        while (this.middlewares.use.length > 0) {\n            var middleware = this.middlewares.use.shift();\n            if (middleware.path) {\n                app.use.apply(app, [middleware.path].concat(middleware.handlers));\n            }\n            else {\n                app.use.apply(app, middleware.handlers);\n            }\n        }\n        while (this.middlewares.get.length > 0) {\n            var middleware = this.middlewares.get.shift();\n            if (middleware.path) {\n                app.get.apply(app, [middleware.path].concat(middleware.handlers));\n            }\n        }\n        while (this.middlewares.post.length > 0) {\n            var middleware = this.middlewares.post.shift();\n            if (middleware.path) {\n                app.post.apply(app, [middleware.path].concat(middleware.handlers));\n            }\n        }\n        app.post(this.options.endpoint, apollo_server_express_1.graphqlExpress(function (request, response) { return __awaiter(_this, void 0, void 0, function () {\n            var context, _a, e_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 4, , 5]);\n                        if (!(typeof this.context === 'function')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.context({\n                                request: request,\n                                response: response,\n                                fragmentReplacements: this.middlewareFragmentReplacements,\n                            })];\n                    case 1:\n                        _a = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = this.context;\n                        _b.label = 3;\n                    case 3:\n                        context = _a;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_1 = _b.sent();\n                        console.error(e_1);\n                        throw e_1;\n                    case 5: return [2 /*return*/, {\n                            schema: this.executableSchema,\n                            tracing: tracing(request),\n                            cacheControl: this.options.cacheControl,\n                            formatError: this.options.formatError || defaultErrorFormatter_1.defaultErrorFormatter,\n                            logFunction: this.options.logFunction,\n                            rootValue: this.options.rootValue,\n                            validationRules: typeof this.options.validationRules === 'function'\n                                ? this.options.validationRules(request, response)\n                                : this.options.validationRules,\n                            fieldResolver: this.options.fieldResolver || graphql_tools_1.defaultMergedResolver,\n                            formatParams: this.options.formatParams,\n                            formatResponse: formatResponse(request),\n                            debug: this.options.debug,\n                            context: context,\n                        }];\n                }\n            });\n        }); }));\n        // Only add GET endpoint if opted in\n        if (this.options.getEndpoint) {\n            app.get(this.options.getEndpoint === true\n                ? this.options.endpoint\n                : this.options.getEndpoint, apollo_server_express_1.graphqlExpress(function (request, response) { return __awaiter(_this, void 0, void 0, function () {\n                var context, _a, e_2;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _b.trys.push([0, 4, , 5]);\n                            if (!(typeof this.context === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.context({ request: request, response: response })];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _a = this.context;\n                            _b.label = 3;\n                        case 3:\n                            context = _a;\n                            return [3 /*break*/, 5];\n                        case 4:\n                            e_2 = _b.sent();\n                            console.error(e_2);\n                            throw e_2;\n                        case 5: return [2 /*return*/, {\n                                schema: this.executableSchema,\n                                tracing: tracing(request),\n                                cacheControl: this.options.cacheControl,\n                                formatError: this.options.formatError || defaultErrorFormatter_1.defaultErrorFormatter,\n                                logFunction: this.options.logFunction,\n                                rootValue: this.options.rootValue,\n                                validationRules: this.options.validationRules,\n                                fieldResolver: this.options.fieldResolver || graphql_tools_1.defaultMergedResolver,\n                                formatParams: this.options.formatParams,\n                                formatResponse: this.options.formatResponse,\n                                debug: this.options.debug,\n                                context: context,\n                            }];\n                    }\n                });\n            }); }));\n        }\n        if (this.options.playground) {\n            var playgroundOptions = {\n                endpoint: this.options.endpoint,\n                subscriptionsEndpoint: this.subscriptionServerOptions\n                    ? this.subscriptionServerOptions.path\n                    : undefined,\n                tabs: this.options.defaultPlaygroundQuery\n                    ? [\n                        {\n                            endpoint: this.options.endpoint,\n                            query: this.options.defaultPlaygroundQuery,\n                        },\n                    ]\n                    : undefined,\n            };\n            app.get(this.options.playground, graphql_playground_middleware_express_1.default(playgroundOptions));\n        }\n        if (!this.executableSchema) {\n            throw new Error('No schema defined');\n        }\n        var server = this.options.https\n            ? https_1.createServer(this.options.https, app)\n            : http_1.createServer(app);\n        if (this.subscriptionServerOptions) {\n            this.createSubscriptionServer(server);\n        }\n        return server;\n    };\n    GraphQLServer.prototype.start = function (optionsOrCallback, callback) {\n        var _this = this;\n        var options = optionsOrCallback && typeof optionsOrCallback === 'function'\n            ? {}\n            : optionsOrCallback;\n        var callbackFunc = callback\n            ? callback\n            : optionsOrCallback && typeof optionsOrCallback === 'function'\n                ? optionsOrCallback\n                : function () { return null; };\n        var server = this.createHttpServer(options);\n        return new Promise(function (resolve, reject) {\n            var combinedServer = server;\n            combinedServer.listen(_this.options.port, function () {\n                callbackFunc(__assign({}, _this.options, { port: combinedServer.address().port }));\n                resolve(combinedServer);\n            });\n        });\n    };\n    GraphQLServer.prototype.createSubscriptionServer = function (combinedServer) {\n        var _this = this;\n        this.subscriptionServer = subscriptions_transport_ws_1.SubscriptionServer.create({\n            schema: this.executableSchema,\n            // TODO remove once `@types/graphql` is fixed for `execute`\n            execute: graphql_1.execute,\n            subscribe: graphql_1.subscribe,\n            onConnect: this.subscriptionServerOptions.onConnect\n                ? this.subscriptionServerOptions.onConnect\n                : function (connectionParams, webSocket) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                    return [2 /*return*/, (__assign({}, connectionParams))];\n                }); }); },\n            onDisconnect: this.subscriptionServerOptions.onDisconnect,\n            onOperation: function (message, connection, webSocket) { return __awaiter(_this, void 0, void 0, function () {\n                var context, _a, e_3;\n                var _this = this;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // The following should be replaced when SubscriptionServer accepts a formatError\n                            // parameter for custom error formatting.\n                            // See https://github.com/apollographql/subscriptions-transport-ws/issues/182\n                            connection.formatResponse = function (value) { return (__assign({}, value, { errors: value.errors &&\n                                    value.errors.map(_this.options.formatError || defaultErrorFormatter_1.defaultErrorFormatter) })); };\n                            _b.label = 1;\n                        case 1:\n                            _b.trys.push([1, 5, , 6]);\n                            if (!(typeof this.context === 'function')) return [3 /*break*/, 3];\n                            return [4 /*yield*/, this.context({ connection: connection })];\n                        case 2:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            _a = this.context;\n                            _b.label = 4;\n                        case 4:\n                            context = _a;\n                            return [3 /*break*/, 6];\n                        case 5:\n                            e_3 = _b.sent();\n                            console.error(e_3);\n                            throw e_3;\n                        case 6: return [2 /*return*/, __assign({}, connection, { context: context })];\n                    }\n                });\n            }); },\n            keepAlive: this.subscriptionServerOptions.keepAlive,\n        }, {\n            server: combinedServer,\n            path: this.subscriptionServerOptions.path,\n        });\n    };\n    return GraphQLServer;\n}());\nexports.GraphQLServer = GraphQLServer;\nfunction mergeTypeDefs(typeDefs) {\n    if (typeof typeDefs === 'string') {\n        if (typeDefs.endsWith('graphql')) {\n            var schemaPath = path.resolve(typeDefs);\n            if (!fs.existsSync(schemaPath)) {\n                throw new Error(\"No schema found for path: \" + schemaPath);\n            }\n            return graphql_import_1.importSchema(schemaPath);\n        }\n        else {\n            return typeDefs;\n        }\n    }\n    if (typeof typeDefs === 'function') {\n        typeDefs = typeDefs();\n    }\n    if (isDocumentNode(typeDefs)) {\n        return graphql_1.print(typeDefs);\n    }\n    if (Array.isArray(typeDefs)) {\n        return typeDefs.reduce(function (acc, t) { return acc + '\\n' + mergeTypeDefs(t); }, '');\n    }\n    throw new Error('Typedef is not string, function, DocumentNode or array of previous');\n}\nfunction isDocumentNode(node) {\n    return node.kind === 'Document';\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}