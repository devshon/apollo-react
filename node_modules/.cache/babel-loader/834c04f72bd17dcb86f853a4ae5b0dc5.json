{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_server_lambda_1 = require(\"apollo-server-lambda\");\n\nvar fs = require(\"fs\");\n\nvar graphql_import_1 = require(\"graphql-import\");\n\nvar graphql_playground_middleware_lambda_1 = require(\"graphql-playground-middleware-lambda\");\n\nvar graphql_tools_1 = require(\"graphql-tools\");\n\nvar graphql_middleware_1 = require(\"graphql-middleware\");\n\nvar graphql_deduplicator_1 = require(\"graphql-deduplicator\");\n\nvar path = require(\"path\");\n\nvar GraphQLServerLambda =\n/** @class */\nfunction () {\n  function GraphQLServerLambda(props) {\n    var _this = this;\n\n    this.middlewareFragmentReplacements = [];\n\n    this.graphqlHandler = function (event, context, callback) {\n      function callbackFilter(error, output) {\n        var headers = output.headers || {};\n        headers['Access-Control-Allow-Origin'] = '*'; // eslint-disable-next-line no-param-reassign\n\n        output.headers = headers;\n        callback(error, output);\n      }\n\n      var tracing = function (event) {\n        var t = _this.options.tracing;\n\n        if (typeof t === 'boolean') {\n          return t;\n        } else if (t.mode === 'http-header') {\n          return event.headers && event.headers['x-apollo-tracing'] !== undefined;\n        } else {\n          return t.mode === 'enabled';\n        }\n      };\n\n      var formatResponse = function (event) {\n        if (!_this.options.deduplicator) {\n          return _this.options.formatResponse;\n        }\n\n        return function (response) {\n          var args = [];\n\n          for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n          }\n\n          var _a;\n\n          if (event.headers && event.headers['X-GraphQL-Deduplicate'] && response.data && !response.data.__schema) {\n            response.data = graphql_deduplicator_1.deflate(response.data);\n          }\n\n          return _this.options.formatResponse ? (_a = _this.options).formatResponse.apply(_a, [response].concat(args)) : response;\n        };\n      };\n\n      var handler = apollo_server_lambda_1.graphqlLambda(function (event, lambdaContext) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var apolloContext, _a, e_1;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                _b.trys.push([0, 4,, 5]);\n\n                if (!(typeof this.context === 'function')) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.context({\n                  event: event,\n                  context: lambdaContext,\n                  fragmentReplacements: this.middlewareFragmentReplacements\n                })];\n\n              case 1:\n                _a = _b.sent();\n                return [3\n                /*break*/\n                , 3];\n\n              case 2:\n                _a = this.context;\n                _b.label = 3;\n\n              case 3:\n                apolloContext = _a;\n                return [3\n                /*break*/\n                , 5];\n\n              case 4:\n                e_1 = _b.sent();\n                console.error(e_1);\n                throw e_1;\n\n              case 5:\n                if (typeof this.options.validationRules === 'function') {\n                  throw new Error('validationRules as callback is only compatible with Express');\n                }\n\n                return [2\n                /*return*/\n                , {\n                  schema: this.executableSchema,\n                  tracing: tracing(event),\n                  context: apolloContext,\n                  cacheControl: this.options.cacheControl,\n                  formatError: this.options.formatError,\n                  logFunction: this.options.logFunction,\n                  rootValue: this.options.rootValue,\n                  validationRules: this.options.validationRules,\n                  fieldResolver: this.options.fieldResolver || graphql_tools_1.defaultMergedResolver,\n                  formatParams: this.options.formatParams,\n                  formatResponse: formatResponse(event),\n                  debug: this.options.debug\n                }];\n            }\n          });\n        });\n      });\n      handler(event, context, callbackFilter);\n    };\n\n    this.playgroundHandler = function (event, lambdaContext, callback) {\n      graphql_playground_middleware_lambda_1.default({\n        endpoint: _this.options.endpoint\n      })(event, lambdaContext, callback);\n    };\n\n    this.handler = function (event, lambdaContext, callback) {\n      if (event.httpMethod === 'GET') {\n        _this.playgroundHandler(event, lambdaContext, callback);\n      } else {\n        _this.graphqlHandler(event, lambdaContext, callback);\n      }\n    };\n\n    var defaultOptions = {\n      tracing: {\n        mode: 'http-header'\n      },\n      deduplicator: true\n    };\n    this.options = __assign({}, defaultOptions, props.options);\n    this.context = props.context;\n\n    if (props.schema) {\n      this.executableSchema = props.schema;\n    } else if (props.typeDefs && props.resolvers) {\n      var directiveResolvers = props.directiveResolvers,\n          schemaDirectives = props.schemaDirectives,\n          resolverValidationOptions = props.resolverValidationOptions,\n          typeDefs = props.typeDefs,\n          resolvers = props.resolvers; // read from .graphql file if path provided\n\n      if (typeDefs.endsWith('graphql')) {\n        var schemaPath = path.isAbsolute(typeDefs) ? path.resolve(typeDefs) : path.resolve(typeDefs);\n\n        if (!fs.existsSync(schemaPath)) {\n          throw new Error(\"No schema found for path: \" + schemaPath);\n        }\n\n        typeDefs = graphql_import_1.importSchema(schemaPath);\n      }\n\n      this.executableSchema = graphql_tools_1.makeExecutableSchema({\n        directiveResolvers: directiveResolvers,\n        schemaDirectives: schemaDirectives,\n        resolverValidationOptions: resolverValidationOptions,\n        typeDefs: typeDefs,\n        resolvers: resolvers\n      });\n    }\n\n    if (props.middlewares) {\n      var _a = graphql_middleware_1.applyMiddleware.apply(void 0, [this.executableSchema].concat(props.middlewares)),\n          schema = _a.schema,\n          fragmentReplacements = _a.fragmentReplacements;\n\n      this.executableSchema = schema;\n      this.middlewareFragmentReplacements = fragmentReplacements;\n    }\n  }\n\n  return GraphQLServerLambda;\n}();\n\nexports.GraphQLServerLambda = GraphQLServerLambda;","map":{"version":3,"sources":["../src/lambda.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apollo_server_lambda_1 = require(\"apollo-server-lambda\");\nvar fs = require(\"fs\");\nvar graphql_import_1 = require(\"graphql-import\");\nvar graphql_playground_middleware_lambda_1 = require(\"graphql-playground-middleware-lambda\");\nvar graphql_tools_1 = require(\"graphql-tools\");\nvar graphql_middleware_1 = require(\"graphql-middleware\");\nvar graphql_deduplicator_1 = require(\"graphql-deduplicator\");\nvar path = require(\"path\");\nvar GraphQLServerLambda = /** @class */ (function () {\n    function GraphQLServerLambda(props) {\n        var _this = this;\n        this.middlewareFragmentReplacements = [];\n        this.graphqlHandler = function (event, context, callback) {\n            function callbackFilter(error, output) {\n                var headers = output.headers || {};\n                headers['Access-Control-Allow-Origin'] = '*';\n                // eslint-disable-next-line no-param-reassign\n                output.headers = headers;\n                callback(error, output);\n            }\n            var tracing = function (event) {\n                var t = _this.options.tracing;\n                if (typeof t === 'boolean') {\n                    return t;\n                }\n                else if (t.mode === 'http-header') {\n                    return event.headers && event.headers['x-apollo-tracing'] !== undefined;\n                }\n                else {\n                    return t.mode === 'enabled';\n                }\n            };\n            var formatResponse = function (event) {\n                if (!_this.options.deduplicator) {\n                    return _this.options.formatResponse;\n                }\n                return function (response) {\n                    var args = [];\n                    for (var _i = 1; _i < arguments.length; _i++) {\n                        args[_i - 1] = arguments[_i];\n                    }\n                    var _a;\n                    if (event.headers &&\n                        event.headers['X-GraphQL-Deduplicate'] &&\n                        response.data &&\n                        !response.data.__schema) {\n                        response.data = graphql_deduplicator_1.deflate(response.data);\n                    }\n                    return _this.options.formatResponse\n                        ? (_a = _this.options).formatResponse.apply(_a, [response].concat(args)) : response;\n                };\n            };\n            var handler = apollo_server_lambda_1.graphqlLambda(function (event, lambdaContext) { return __awaiter(_this, void 0, void 0, function () {\n                var apolloContext, _a, e_1;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _b.trys.push([0, 4, , 5]);\n                            if (!(typeof this.context === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.context({\n                                    event: event,\n                                    context: lambdaContext,\n                                    fragmentReplacements: this.middlewareFragmentReplacements,\n                                })];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _a = this.context;\n                            _b.label = 3;\n                        case 3:\n                            apolloContext = _a;\n                            return [3 /*break*/, 5];\n                        case 4:\n                            e_1 = _b.sent();\n                            console.error(e_1);\n                            throw e_1;\n                        case 5:\n                            if (typeof this.options.validationRules === 'function') {\n                                throw new Error('validationRules as callback is only compatible with Express');\n                            }\n                            return [2 /*return*/, {\n                                    schema: this.executableSchema,\n                                    tracing: tracing(event),\n                                    context: apolloContext,\n                                    cacheControl: this.options.cacheControl,\n                                    formatError: this.options.formatError,\n                                    logFunction: this.options.logFunction,\n                                    rootValue: this.options.rootValue,\n                                    validationRules: this.options.validationRules,\n                                    fieldResolver: this.options.fieldResolver || graphql_tools_1.defaultMergedResolver,\n                                    formatParams: this.options.formatParams,\n                                    formatResponse: formatResponse(event),\n                                    debug: this.options.debug,\n                                }];\n                    }\n                });\n            }); });\n            handler(event, context, callbackFilter);\n        };\n        this.playgroundHandler = function (event, lambdaContext, callback) {\n            graphql_playground_middleware_lambda_1.default({\n                endpoint: _this.options.endpoint,\n            })(event, lambdaContext, callback);\n        };\n        this.handler = function (event, lambdaContext, callback) {\n            if (event.httpMethod === 'GET') {\n                _this.playgroundHandler(event, lambdaContext, callback);\n            }\n            else {\n                _this.graphqlHandler(event, lambdaContext, callback);\n            }\n        };\n        var defaultOptions = {\n            tracing: { mode: 'http-header' },\n            deduplicator: true,\n        };\n        this.options = __assign({}, defaultOptions, props.options);\n        this.context = props.context;\n        if (props.schema) {\n            this.executableSchema = props.schema;\n        }\n        else if (props.typeDefs && props.resolvers) {\n            var directiveResolvers = props.directiveResolvers, schemaDirectives = props.schemaDirectives, resolverValidationOptions = props.resolverValidationOptions, typeDefs = props.typeDefs, resolvers = props.resolvers;\n            // read from .graphql file if path provided\n            if (typeDefs.endsWith('graphql')) {\n                var schemaPath = path.isAbsolute(typeDefs)\n                    ? path.resolve(typeDefs)\n                    : path.resolve(typeDefs);\n                if (!fs.existsSync(schemaPath)) {\n                    throw new Error(\"No schema found for path: \" + schemaPath);\n                }\n                typeDefs = graphql_import_1.importSchema(schemaPath);\n            }\n            this.executableSchema = graphql_tools_1.makeExecutableSchema({\n                directiveResolvers: directiveResolvers,\n                schemaDirectives: schemaDirectives,\n                resolverValidationOptions: resolverValidationOptions,\n                typeDefs: typeDefs,\n                resolvers: resolvers,\n            });\n        }\n        if (props.middlewares) {\n            var _a = graphql_middleware_1.applyMiddleware.apply(void 0, [this.executableSchema].concat(props.middlewares)), schema = _a.schema, fragmentReplacements = _a.fragmentReplacements;\n            this.executableSchema = schema;\n            this.middlewareFragmentReplacements = fragmentReplacements;\n        }\n    }\n    return GraphQLServerLambda;\n}());\nexports.GraphQLServerLambda = GraphQLServerLambda;\n//# sourceMappingURL=lambda.js.map"]},"metadata":{},"sourceType":"script"}