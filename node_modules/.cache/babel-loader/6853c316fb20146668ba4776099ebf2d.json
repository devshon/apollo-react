{"ast":null,"code":"var _jsxFileName = \"/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: Int!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n    ) {\n      id\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nconst Create = () => {\n  _s();\n\n  const [onCreateMovie, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_MOVIE);\n\n  const _title = useRef(null);\n\n  const _rating = useRef(null);\n\n  const _description_intro = useRef(null);\n\n  const _language = useRef(null);\n\n  const _medium_cover_image = useRef(null);\n\n  const _genres = useRef([]);\n\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: 485583,\n        title: _title.current,\n        rating: _rating.current,\n        description_intro: _description_intro.current,\n        language: _language.current,\n        medium_cover_image: _medium_cover_image.current,\n        genres: [\"drama\"]\n      }\n    });\n  }\n\n  console.log(\"Create >>> \", loading, error, data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC601\\uD654\\uBA85 \\uC785\\uB825\",\n      onChange: e => {\n        _title.current = e.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"3\",\n      placeholder: \"\\uC601\\uD654\\uC124\\uBA85 \\uC785\\uB825\",\n      rows: \"6\",\n      onChange: e => {\n        _description_intro.current = e.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      defaultValue: \"0\",\n      onChange: e => {\n        _rating.current = e.target.value;\n      },\n      children: ratingMap.map((rating, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: rating,\n          children: rating\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      defaultValue: \"en\",\n      onChange: e => {\n        _language.current = e.target.value;\n      },\n      children: languageMap.map((lang, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lang,\n          children: lang\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: genresMap.map((genres, i) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: genres,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: genres,\n              onClick: e => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), genres]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC601\\uD654\\uD3EC\\uC2A4\\uD130 \\uC774\\uBBF8\\uC9C0 \\uB9C1\\uD06C \\uC785\\uB825\",\n      onChange: e => {\n        _medium_cover_image.current = e.target.value;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        onCreate();\n      },\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"+BoTtBMta7a9j5LX26oQOu2WAt8=\", false, function () {\n  return [useMutation];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js"],"names":["React","useRef","gql","useMutation","Button","CREATE_MOVIE","Create","onCreateMovie","loading","error","data","_title","_rating","_description_intro","_language","_medium_cover_image","_genres","ratingMap","languageMap","genresMap","onCreate","variables","id","title","current","rating","description_intro","language","medium_cover_image","genres","console","log","display","flexDirection","e","target","value","map","i","lang"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Button } from \"antd\";\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: Int!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n    ) {\n      id\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n  }\n`;\nconst Create = () => {\n  const [onCreateMovie, { loading, error, data }] = useMutation(CREATE_MOVIE);\n\n  const _title = useRef(null);\n  const _rating = useRef(null);\n  const _description_intro = useRef(null);\n  const _language = useRef(null);\n  const _medium_cover_image = useRef(null);\n  const _genres = useRef([]);\n\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: 485583,\n        title: _title.current,\n        rating: _rating.current,\n        description_intro: _description_intro.current,\n        language: _language.current,\n        medium_cover_image: _medium_cover_image.current,\n        genres: [\"drama\"],\n      },\n    });\n  }\n\n  console.log(\"Create >>> \", loading, error, data);\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <input\n        type=\"text\"\n        placeholder=\"영화명 입력\"\n        onChange={(e) => {\n          _title.current = e.target.value;\n        }}\n      />\n      <textarea\n        minLength=\"3\"\n        placeholder=\"영화설명 입력\"\n        rows=\"6\"\n        onChange={(e) => {\n          _description_intro.current = e.target.value;\n        }}\n      />\n      <select\n        defaultValue=\"0\"\n        onChange={(e) => {\n          _rating.current = e.target.value;\n        }}\n      >\n        {ratingMap.map((rating, i) => {\n          return (\n            <option key={i} value={rating}>\n              {rating}\n            </option>\n          );\n        })}\n      </select>\n      <select\n        defaultValue=\"en\"\n        onChange={(e) => {\n          _language.current = e.target.value;\n        }}\n      >\n        {languageMap.map((lang, i) => {\n          return (\n            <option key={i} value={lang}>\n              {lang}\n            </option>\n          );\n        })}\n      </select>\n      <div>\n        {genresMap.map((genres, i) => {\n          return (\n            <span key={i}>\n              <label htmlFor={genres}>\n                <input type=\"checkbox\" id={genres} onClick={(e) => {}} />\n                {genres}\n              </label>\n            </span>\n          );\n        })}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"영화포스터 이미지 링크 입력\"\n        onChange={(e) => {\n          _medium_cover_image.current = e.target.value;\n        }}\n      />\n      <Button\n        onClick={() => {\n          onCreate();\n        }}\n      >\n        Create\n      </Button>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}