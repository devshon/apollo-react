{"ast":null,"code":"var _jsxFileName = \"/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = props => {\n  _s();\n\n  const [onCreateMovie, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  console.log(\"genres >>> \", language);\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date())\n      }\n    });\n  }\n\n  const onDescription = useCallback(value => {\n    console.log(\"value > \", value); // setDescription_intro(value);\n  }, []);\n  console.log(\"create >>> \", loading, error, data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654\\uBA85 \\uC785\\uB825\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        minLength: \"3\",\n        placeholder: \"\\uC601\\uD654\\uC124\\uBA85 \\uC785\\uB825\",\n        rows: \"6\",\n        value: description_intro,\n        onChange: e => {\n          onDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rating,\n        onChange: e => {\n          setRating(e.target.value);\n        },\n        children: ratingMap.map((rating, i) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: rating,\n            children: rating\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: e => {\n          setLanguage(e.target.value);\n        },\n        children: languageMap.map((lang, i) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang,\n            children: lang\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: genresMap.map((_genres, i) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: _genres,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: _genres,\n              onClick: e => {\n                if (_genres.includes(e.target.id)) {\n                  const index = genres.indexOf(e.target.id);\n                  setGenres(genres.splice(index, 1));\n                } else {\n                  setGenres(genres.push(e.target.id));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), _genres]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654\\uD3EC\\uC2A4\\uD130 \\uC774\\uBBF8\\uC9C0 \\uB9C1\\uD06C \\uC785\\uB825\",\n        value: medium_cover_image,\n        onChange: e => {\n          setMedium_cover_image(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        onCreate();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"1fg8NzMU/LBh8zVf+GbOK6KsUOo=\", false, function () {\n  return [useMutation];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js"],"names":["React","useCallback","useRef","useState","gql","useMutation","v4","uuidv4","CREATE_MOVIE","Create","props","onCreateMovie","loading","error","data","title","setTitle","rating","setRating","description_intro","setDescription_intro","language","setLanguage","medium_cover_image","setMedium_cover_image","genres","setGenres","console","log","ratingMap","languageMap","genresMap","onCreate","variables","id","Number","postedAt","String","Date","updatedAt","onDescription","value","display","flexDirection","e","target","map","i","lang","_genres","includes","index","indexOf","splice","push"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = (props) => {\n  const [onCreateMovie, { loading, error, data }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n\n  console.log(\"genres >>> \", language);\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date()),\n      },\n    });\n  }\n\n  const onDescription = useCallback((value) => {\n    console.log(\"value > \", value);\n    // setDescription_intro(value);\n  }, []);\n\n  console.log(\"create >>> \", loading, error, data);\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"영화명 입력\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <textarea\n          minLength=\"3\"\n          placeholder=\"영화설명 입력\"\n          rows=\"6\"\n          value={description_intro}\n          onChange={(e) => {\n            onDescription(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <select\n          value={rating}\n          onChange={(e) => {\n            setRating(e.target.value);\n          }}\n        >\n          {ratingMap.map((rating, i) => {\n            return (\n              <option key={i} value={rating}>\n                {rating}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div>\n        <select\n          value={language}\n          onChange={(e) => {\n            setLanguage(e.target.value);\n          }}\n        >\n          {languageMap.map((lang, i) => {\n            return (\n              <option key={i} value={lang}>\n                {lang}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div>\n        {genresMap.map((_genres, i) => {\n          return (\n            <span key={i}>\n              <label htmlFor={_genres}>\n                <input\n                  type=\"checkbox\"\n                  id={_genres}\n                  onClick={(e) => {\n                    if (_genres.includes(e.target.id)) {\n                      const index = genres.indexOf(e.target.id);\n                      setGenres(genres.splice(index, 1));\n                    } else {\n                      setGenres(genres.push(e.target.id));\n                    }\n                  }}\n                />\n                {_genres}\n              </label>\n            </span>\n          );\n        })}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"영화포스터 이미지 링크 입력\"\n          value={medium_cover_image}\n          onChange={(e) => {\n            setMedium_cover_image(e.target.value);\n          }}\n        />\n      </div>\n      <div\n        onClick={() => {\n          onCreate();\n        }}\n      >\n        <span>create</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}