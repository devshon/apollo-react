{"ast":null,"code":"var _jsxFileName = \"/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require(\"lodash\");\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = props => {\n  _s();\n\n  const [onCreateMovie, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date())\n      }\n    });\n    setTitle(\"\");\n    setRating(\"0\");\n    setDescription_intro(\"\");\n    setLanguage(\"en\");\n    setMedium_cover_image(\"\");\n    setGenres([]);\n  }\n\n  console.log(\"create >>> \", loading, error, data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      height: \"90%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"create_empty_box\",\n          style: {\n            width: \"100%\"\n          },\n          type: \"text\",\n          placeholder: \"\\uC601\\uD654\\uBA85 \\uC785\\uB825\",\n          value: title,\n          onChange: e => {\n            setTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"create_empty_box\",\n          style: {\n            width: \"100%\"\n          },\n          minLength: \"3\",\n          placeholder: \"\\uC601\\uD654\\uC124\\uBA85 \\uC785\\uB825\",\n          rows: \"6\",\n          value: description_intro,\n          onChange: e => {\n            setDescription_intro(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: \"flex\",\n            marginRight: \"10px\",\n            padding: \"0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: \"5px\"\n            },\n            children: \"\\uD3C9\\uC810\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"create_empty_box\",\n            style: {\n              flex: 1\n            },\n            value: rating,\n            onChange: e => {\n              setRating(e.target.value);\n            },\n            children: ratingMap.map((rating, i) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: rating,\n                children: rating\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: \"5px\"\n            },\n            children: \"\\uC5B8\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              flex: 1\n            },\n            value: language,\n            onChange: e => {\n              setLanguage(e.target.value);\n            },\n            children: languageMap.map((lang, i) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: lang,\n                children: lang\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC7A5\\uB974\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: genresMap.map((_genres, i) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: _genres,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: _genres,\n                  checked: genres.includes(_genres),\n                  onChange: e => {\n                    if (genres.includes(e.target.id)) {\n                      const index = genres.indexOf(e.target.id);\n                      let arr = genres;\n                      arr.splice(index, 1);\n                      setGenres(_.union(arr, genres));\n                    } else {\n                      let arr = [];\n                      arr.push(e.target.id);\n                      setGenres(_.union(arr, genres));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), _genres]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"100%\"\n          },\n          type: \"text\",\n          placeholder: \"\\uC601\\uD654\\uD3EC\\uC2A4\\uD130 \\uC774\\uBBF8\\uC9C0 \\uB9C1\\uD06C \\uC785\\uB825\",\n          value: medium_cover_image,\n          onChange: e => {\n            setMedium_cover_image(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_createbutton\",\n      onClick: () => {\n        onCreate();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"SKw6gZ1nsauJXf+NL/kEyNlGGP8=\", false, function () {\n  return [useMutation];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js"],"names":["React","useState","gql","useMutation","v4","uuidv4","_","require","CREATE_MOVIE","Create","props","onCreateMovie","loading","error","data","title","setTitle","rating","setRating","description_intro","setDescription_intro","language","setLanguage","medium_cover_image","setMedium_cover_image","genres","setGenres","ratingMap","languageMap","genresMap","onCreate","variables","id","Number","postedAt","String","Date","updatedAt","console","log","display","flexDirection","justifyContent","height","width","e","target","value","flex","marginRight","padding","map","i","lang","_genres","includes","index","indexOf","arr","splice","union","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst _ = require(\"lodash\");\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = (props) => {\n  const [onCreateMovie, { loading, error, data }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date()),\n      },\n    });\n    setTitle(\"\");\n    setRating(\"0\");\n    setDescription_intro(\"\");\n    setLanguage(\"en\");\n    setMedium_cover_image(\"\");\n    setGenres([]);\n  }\n\n  console.log(\"create >>> \", loading, error, data);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"90%\",\n      }}\n    >\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div>\n          <input\n            className=\"create_empty_box\"\n            style={{ width: \"100%\" }}\n            type=\"text\"\n            placeholder=\"영화명 입력\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <textarea\n            className=\"create_empty_box\"\n            style={{ width: \"100%\" }}\n            minLength=\"3\"\n            placeholder=\"영화설명 입력\"\n            rows=\"6\"\n            value={description_intro}\n            onChange={(e) => {\n              setDescription_intro(e.target.value);\n            }}\n          />\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              marginRight: \"10px\",\n              padding: \"0px\",\n            }}\n          >\n            <span style={{ marginRight: \"5px\" }}>평점</span>\n            <select\n              className=\"create_empty_box\"\n              style={{ flex: 1 }}\n              value={rating}\n              onChange={(e) => {\n                setRating(e.target.value);\n              }}\n            >\n              {ratingMap.map((rating, i) => {\n                return (\n                  <option key={i} value={rating}>\n                    {rating}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div style={{ flex: 1, display: \"flex\" }}>\n            <span style={{ marginRight: \"5px\" }}>언어</span>\n            <select\n              style={{ flex: 1 }}\n              value={language}\n              onChange={(e) => {\n                setLanguage(e.target.value);\n              }}\n            >\n              {languageMap.map((lang, i) => {\n                return (\n                  <option key={i} value={lang}>\n                    {lang}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div>\n            <span>장르</span>\n          </div>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {genresMap.map((_genres, i) => {\n              return (\n                <span key={i}>\n                  <label htmlFor={_genres}>\n                    <input\n                      type=\"checkbox\"\n                      id={_genres}\n                      checked={genres.includes(_genres)}\n                      onChange={(e) => {\n                        if (genres.includes(e.target.id)) {\n                          const index = genres.indexOf(e.target.id);\n                          let arr = genres;\n                          arr.splice(index, 1);\n                          setGenres(_.union(arr, genres));\n                        } else {\n                          let arr = [];\n                          arr.push(e.target.id);\n                          setGenres(_.union(arr, genres));\n                        }\n                      }}\n                    />\n                    {_genres}\n                  </label>\n                </span>\n              );\n            })}\n          </div>\n        </div>\n        <div>\n          <input\n            style={{ width: \"100%\" }}\n            type=\"text\"\n            placeholder=\"영화포스터 이미지 링크 입력\"\n            value={medium_cover_image}\n            onChange={(e) => {\n              setMedium_cover_image(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div\n        className=\"create_createbutton\"\n        onClick={() => {\n          onCreate();\n        }}\n      >\n        <span>create</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}