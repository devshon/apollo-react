{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nvar event_emitter_to_async_iterator_1 = require(\"./event-emitter-to-async-iterator\");\n\nvar PubSub = function () {\n  function PubSub(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.ee = options.eventEmitter || new events_1.EventEmitter();\n    this.subscriptions = {};\n    this.subIdCounter = 0;\n  }\n\n  PubSub.prototype.publish = function (triggerName, payload) {\n    this.ee.emit(triggerName, payload);\n    return true;\n  };\n\n  PubSub.prototype.subscribe = function (triggerName, onMessage) {\n    this.ee.addListener(triggerName, onMessage);\n    this.subIdCounter = this.subIdCounter + 1;\n    this.subscriptions[this.subIdCounter] = [triggerName, onMessage];\n    return Promise.resolve(this.subIdCounter);\n  };\n\n  PubSub.prototype.unsubscribe = function (subId) {\n    var _a = this.subscriptions[subId],\n        triggerName = _a[0],\n        onMessage = _a[1];\n    delete this.subscriptions[subId];\n    this.ee.removeListener(triggerName, onMessage);\n  };\n\n  PubSub.prototype.asyncIterator = function (triggers) {\n    return event_emitter_to_async_iterator_1.eventEmitterAsyncIterator(this.ee, triggers);\n  };\n\n  return PubSub;\n}();\n\nexports.PubSub = PubSub;","map":{"version":3,"sources":["../src/pubsub.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,iCAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AAMA,IAAA,MAAA,GAAA,YAAA;AAKE,WAAA,MAAA,CAAY,OAAZ,EAAuC;AAA3B,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAA2B;;AACrC,SAAK,EAAL,GAAU,OAAO,CAAC,YAAR,IAAwB,IAAI,QAAA,CAAA,YAAJ,EAAlC;AACA,SAAK,aAAL,GAAqB,EAArB;AACA,SAAK,YAAL,GAAoB,CAApB;AACD;;AAEM,EAAA,MAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,WAAf,EAAoC,OAApC,EAAgD;AAC9C,SAAK,EAAL,CAAQ,IAAR,CAAa,WAAb,EAA0B,OAA1B;AAEA,WAAO,IAAP;AACD,GAJM;;AAMA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,WAAjB,EAAsC,SAAtC,EAAyE;AACvE,SAAK,EAAL,CAAQ,WAAR,CAAoB,WAApB,EAAiC,SAAjC;AACA,SAAK,YAAL,GAAoB,KAAK,YAAL,GAAoB,CAAxC;AACA,SAAK,aAAL,CAAmB,KAAK,YAAxB,IAAwC,CAAC,WAAD,EAAc,SAAd,CAAxC;AAEA,WAAO,OAAO,CAAC,OAAR,CAAgB,KAAK,YAArB,CAAP;AACD,GANM;;AAQA,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,KAAnB,EAAgC;AACxB,QAAA,EAAA,GAAA,KAAA,aAAA,CAAA,KAAA,CAAA;AAAA,QAAC,WAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AAAA,QAAc,SAAA,GAAA,EAAA,CAAA,CAAA,CAAd;AACN,WAAO,KAAK,aAAL,CAAmB,KAAnB,CAAP;AACA,SAAK,EAAL,CAAQ,cAAR,CAAuB,WAAvB,EAAoC,SAApC;AACD,GAJM;;AAMA,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAwB,QAAxB,EAAmD;AACjD,WAAO,iCAAA,CAAA,yBAAA,CAA6B,KAAK,EAAlC,EAAsC,QAAtC,CAAP;AACD,GAFM;;AAGT,SAAA,MAAA;AAAC,CAlCD,EAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar event_emitter_to_async_iterator_1 = require(\"./event-emitter-to-async-iterator\");\nvar PubSub = (function () {\n    function PubSub(options) {\n        if (options === void 0) { options = {}; }\n        this.ee = options.eventEmitter || new events_1.EventEmitter();\n        this.subscriptions = {};\n        this.subIdCounter = 0;\n    }\n    PubSub.prototype.publish = function (triggerName, payload) {\n        this.ee.emit(triggerName, payload);\n        return true;\n    };\n    PubSub.prototype.subscribe = function (triggerName, onMessage) {\n        this.ee.addListener(triggerName, onMessage);\n        this.subIdCounter = this.subIdCounter + 1;\n        this.subscriptions[this.subIdCounter] = [triggerName, onMessage];\n        return Promise.resolve(this.subIdCounter);\n    };\n    PubSub.prototype.unsubscribe = function (subId) {\n        var _a = this.subscriptions[subId], triggerName = _a[0], onMessage = _a[1];\n        delete this.subscriptions[subId];\n        this.ee.removeListener(triggerName, onMessage);\n    };\n    PubSub.prototype.asyncIterator = function (triggers) {\n        return event_emitter_to_async_iterator_1.eventEmitterAsyncIterator(this.ee, triggers);\n    };\n    return PubSub;\n}());\nexports.PubSub = PubSub;\n//# sourceMappingURL=pubsub.js.map"]},"metadata":{},"sourceType":"script"}