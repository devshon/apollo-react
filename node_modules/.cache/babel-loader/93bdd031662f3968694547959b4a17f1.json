{"ast":null,"code":"import { ApolloClient, HttpLink, split } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:4000/\"\n});\nconst wsLink = new WebSocketLink({\n  uri: \"ws://localhost:4000/\",\n  options: {\n    reconnect: true,\n    connectionParams: {}\n  }\n});\nconst link = split(_ref => {\n  let {\n    query\n  } = _ref;\n  const {\n    kind,\n    operation\n  } = getMainDefinition(query);\n  return kind === \"OperationDefinition\" && operation === \"subscription\";\n}, wsLink, httpLink);\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n}); // const client = new ApolloClient({\n//   uri: \"http://localhost:4000/\",\n// });\n\nexport default client;","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/apollo.js"],"names":["ApolloClient","HttpLink","split","InMemoryCache","WebSocketLink","getMainDefinition","httpLink","uri","wsLink","options","reconnect","connectionParams","link","query","kind","operation","client","cache"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,QAAvB,EAAiCC,KAAjC,QAA8C,cAA9C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,MAAMC,QAAQ,GAAG,IAAIL,QAAJ,CAAa;AAC5BM,EAAAA,GAAG,EAAE;AADuB,CAAb,CAAjB;AAIA,MAAMC,MAAM,GAAG,IAAIJ,aAAJ,CAAkB;AAC/BG,EAAAA,GAAG,EAAE,sBAD0B;AAE/BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,IADJ;AAEPC,IAAAA,gBAAgB,EAAE;AAFX;AAFsB,CAAlB,CAAf;AAQA,MAAMC,IAAI,GAAGV,KAAK,CAChB,QAAe;AAAA,MAAd;AAAEW,IAAAA;AAAF,GAAc;AACb,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBV,iBAAiB,CAACQ,KAAD,CAA7C;AACA,SAAOC,IAAI,KAAK,qBAAT,IAAkCC,SAAS,KAAK,cAAvD;AACD,CAJe,EAKhBP,MALgB,EAMhBF,QANgB,CAAlB;AASA,MAAMU,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BY,EAAAA,IAD8B;AAE9BK,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,CAAjB,CAAf,C,CAKA;AACA;AACA;;AACA,eAAea,MAAf","sourcesContent":["import { ApolloClient, HttpLink, split } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:4000/\",\n});\n\nconst wsLink = new WebSocketLink({\n  uri: \"ws://localhost:4000/\",\n  options: {\n    reconnect: true,\n    connectionParams: {},\n  },\n});\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n});\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000/\",\n// });\nexport default client;\n"]},"metadata":{},"sourceType":"module"}