{"ast":null,"code":"var _jsxFileName = \"/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_MOVIE = gql`\n  query getById($id: String!) {\n    movie(id: $id) {\n      id\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nfunction Detail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(GET_MOVIE, {\n    variables: {\n      id: id\n    }\n  });\n  const {\n    title,\n    rating,\n    description_intro,\n    language,\n    medium_cover_image,\n    genres\n  } = data.movie;\n  console.log(data.movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Detail, \"qa/cOoXFm/77skMr+B5x7wKYStY=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Detail.js"],"names":["React","gql","useQuery","useParams","GET_MOVIE","Detail","id","loading","data","error","variables","title","rating","description_intro","language","medium_cover_image","genres","movie","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,SAAS,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,SAASI,MAAT,GAAkB;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,SAAD,EAAY;AACnDM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEA;AAAN;AADwC,GAAZ,CAAzC;AAIA,QAAM;AACJK,IAAAA,KADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,kBALI;AAMJC,IAAAA;AANI,MAOFR,IAAI,CAACS,KAPT;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACS,KAAjB;AACA,sBACE;AAAA,2BACE;AAAA,gBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApBQD,M;UACQF,S,EACkBD,Q;;;KAF1BG,M;AAsBT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useParams } from \"react-router-dom\";\n\nconst GET_MOVIE = gql`\n  query getById($id: String!) {\n    movie(id: $id) {\n      id\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nfunction Detail() {\n  const { id } = useParams();\n  const { loading, data, error } = useQuery(GET_MOVIE, {\n    variables: { id: id },\n  });\n\n  const {\n    title,\n    rating,\n    description_intro,\n    language,\n    medium_cover_image,\n    genres,\n  } = data.movie;\n  console.log(data.movie);\n  return (\n    <div>\n      <span>{id}</span>\n    </div>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}