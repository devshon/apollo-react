{"ast":null,"code":"var _jsxFileName = \"/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { IoMdArrowBack } from \"react-icons/io\";\nimport { Modal, Layout } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = Layout;\n\nconst _ = require(\"lodash\");\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = props => {\n  _s();\n\n  const [onCreateMovie, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [craeteModal, setCraeteModal] = useState(false);\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    if (title === \"\") {\n      alert(\"영화명을 입력해주세요!\");\n      return;\n    }\n\n    if (medium_cover_image === \"\") {\n      alert(\"영화포스터 이미지 링크를 입력해주세요!\");\n      return;\n    }\n\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date())\n      }\n    });\n    setTitle(\"\");\n    setRating(\"0\");\n    setDescription_intro(\"\");\n    setLanguage(\"en\");\n    setMedium_cover_image(\"\");\n    setGenres([]);\n    setCraeteModal(true);\n  }\n\n  console.log(\"create >>> \", loading, error, data);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"90%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(IoMdArrowBack, {\n          style: {\n            fill: \"#ffff\"\n          },\n          size: \"24px\",\n          onClick: () => {\n            Modal.success({\n              content: \"게시물 등록에 성공했습니다!!\"\n            }); // props.history.goBack();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"create_empty_box\",\n            style: {\n              width: \"100%\"\n            },\n            type: \"text\",\n            placeholder: \"*\\uC601\\uD654\\uBA85 \\uC785\\uB825\",\n            value: title,\n            onChange: e => {\n              setTitle(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"create_empty_box\",\n            style: {\n              width: \"100%\"\n            },\n            minLength: \"3\",\n            placeholder: \"\\uC601\\uD654\\uC124\\uBA85 \\uC785\\uB825\",\n            rows: \"6\",\n            value: description_intro,\n            onChange: e => {\n              setDescription_intro(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"create_empty_box\",\n            style: {\n              width: \"100%\"\n            },\n            type: \"text\",\n            placeholder: \"*\\uC601\\uD654\\uD3EC\\uC2A4\\uD130 \\uC774\\uBBF8\\uC9C0 \\uB9C1\\uD06C \\uC785\\uB825\",\n            value: medium_cover_image,\n            onChange: e => {\n              setMedium_cover_image(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              display: \"flex\",\n              marginRight: \"10px\",\n              padding: \"0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                margin: \"20px 20px 20px 0px\"\n              },\n              children: \"\\uD3C9\\uC810\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"create_empty_box\",\n              style: {\n                flex: 1\n              },\n              value: rating,\n              onChange: e => {\n                setRating(e.target.value);\n              },\n              children: ratingMap.map((rating, i) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: rating,\n                  children: rating\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                margin: \"20px\"\n              },\n              children: \"\\uC5B8\\uC5B4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"create_empty_box\",\n              style: {\n                flex: 1\n              },\n              value: language,\n              onChange: e => {\n                setLanguage(e.target.value);\n              },\n              children: languageMap.map((lang, i) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: lang,\n                  children: lang\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"20px 20PX 20PX 0PX\"\n            },\n            children: \"\\uC7A5\\uB974\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\"\n            },\n            children: genresMap.map((_genres, i) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  margin: \"10px 00px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"create_empty_box\",\n                  style: {\n                    padding: \"0px\"\n                  },\n                  htmlFor: _genres,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: _genres,\n                    checked: genres.includes(_genres),\n                    onChange: e => {\n                      if (genres.includes(e.target.id)) {\n                        const index = genres.indexOf(e.target.id);\n                        let arr = genres;\n                        arr.splice(index, 1);\n                        setGenres(_.union(arr, genres));\n                      } else {\n                        let arr = [];\n                        arr.push(e.target.id);\n                        setGenres(_.union(arr, genres));\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this), _genres]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_createbutton create_empty_box\",\n        onClick: () => {\n          onCreate();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: craeteModal,\n        onOk: () => {\n          setCraeteModal(false);\n        },\n        onCancel: () => {\n          setCraeteModal(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"WeVl0z2kK1TVmdRXKkHCe5htj8o=\", false, function () {\n  return [useMutation];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js"],"names":["React","useState","gql","useMutation","v4","uuidv4","IoMdArrowBack","Modal","Layout","Header","Footer","Sider","Content","_","require","CREATE_MOVIE","Create","props","onCreateMovie","loading","error","data","title","setTitle","rating","setRating","description_intro","setDescription_intro","language","setLanguage","medium_cover_image","setMedium_cover_image","genres","setGenres","craeteModal","setCraeteModal","ratingMap","languageMap","genresMap","onCreate","alert","variables","id","Number","postedAt","String","Date","updatedAt","console","log","display","flexDirection","justifyContent","height","fill","success","content","width","e","target","value","flex","marginRight","padding","margin","map","i","lang","_genres","includes","index","indexOf","arr","splice","union","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { IoMdArrowBack } from \"react-icons/io\";\nimport { Modal, Layout } from \"antd\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst _ = require(\"lodash\");\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: String!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n    $postedAt: String!\n    $updatedAt: String!\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n      postedAt: $postedAt\n      updatedAt: $updatedAt\n    ) {\n      id\n    }\n  }\n`;\n\nconst Create = (props) => {\n  const [onCreateMovie, { loading, error, data }] = useMutation(CREATE_MOVIE);\n  const [title, setTitle] = useState(\"\");\n  const [rating, setRating] = useState(\"0\");\n  const [description_intro, setDescription_intro] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [medium_cover_image, setMedium_cover_image] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [craeteModal, setCraeteModal] = useState(false);\n\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    if (title === \"\") {\n      alert(\"영화명을 입력해주세요!\");\n      return;\n    }\n    if (medium_cover_image === \"\") {\n      alert(\"영화포스터 이미지 링크를 입력해주세요!\");\n      return;\n    }\n    onCreateMovie({\n      variables: {\n        id: uuidv4(),\n        title: title,\n        rating: Number(rating),\n        description_intro: description_intro,\n        language: language,\n        medium_cover_image: medium_cover_image,\n        genres: genres,\n        postedAt: String(new Date()),\n        updatedAt: String(new Date()),\n      },\n    });\n    setTitle(\"\");\n    setRating(\"0\");\n    setDescription_intro(\"\");\n    setLanguage(\"en\");\n    setMedium_cover_image(\"\");\n    setGenres([]);\n    setCraeteModal(true);\n  }\n\n  console.log(\"create >>> \", loading, error, data);\n\n  return (\n    <Layout>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          height: \"90%\",\n        }}\n      >\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <IoMdArrowBack\n            style={{ fill: \"#ffff\" }}\n            size=\"24px\"\n            onClick={() => {\n              Modal.success({ content: \"게시물 등록에 성공했습니다!!\" });\n              // props.history.goBack();\n            }}\n          />\n          <div>\n            <input\n              className=\"create_empty_box\"\n              style={{ width: \"100%\" }}\n              type=\"text\"\n              placeholder=\"*영화명 입력\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </div>\n          <div>\n            <textarea\n              className=\"create_empty_box\"\n              style={{ width: \"100%\" }}\n              minLength=\"3\"\n              placeholder=\"영화설명 입력\"\n              rows=\"6\"\n              value={description_intro}\n              onChange={(e) => {\n                setDescription_intro(e.target.value);\n              }}\n            />\n          </div>\n          <div>\n            <input\n              className=\"create_empty_box\"\n              style={{ width: \"100%\" }}\n              type=\"text\"\n              placeholder=\"*영화포스터 이미지 링크 입력\"\n              value={medium_cover_image}\n              onChange={(e) => {\n                setMedium_cover_image(e.target.value);\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                flex: 1,\n                display: \"flex\",\n                marginRight: \"10px\",\n                padding: \"0px\",\n              }}\n            >\n              <span style={{ margin: \"20px 20px 20px 0px\" }}>평점</span>\n              <select\n                className=\"create_empty_box\"\n                style={{ flex: 1 }}\n                value={rating}\n                onChange={(e) => {\n                  setRating(e.target.value);\n                }}\n              >\n                {ratingMap.map((rating, i) => {\n                  return (\n                    <option key={i} value={rating}>\n                      {rating}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <div style={{ flex: 1, display: \"flex\" }}>\n              <span style={{ margin: \"20px\" }}>언어</span>\n              <select\n                className=\"create_empty_box\"\n                style={{ flex: 1 }}\n                value={language}\n                onChange={(e) => {\n                  setLanguage(e.target.value);\n                }}\n              >\n                {languageMap.map((lang, i) => {\n                  return (\n                    <option key={i} value={lang}>\n                      {lang}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <span style={{ margin: \"20px 20PX 20PX 0PX\" }}>장르</span>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {genresMap.map((_genres, i) => {\n                return (\n                  <span key={i} style={{ margin: \"10px 00px\" }}>\n                    <label\n                      className=\"create_empty_box\"\n                      style={{ padding: \"0px\" }}\n                      htmlFor={_genres}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id={_genres}\n                        checked={genres.includes(_genres)}\n                        onChange={(e) => {\n                          if (genres.includes(e.target.id)) {\n                            const index = genres.indexOf(e.target.id);\n                            let arr = genres;\n                            arr.splice(index, 1);\n                            setGenres(_.union(arr, genres));\n                          } else {\n                            let arr = [];\n                            arr.push(e.target.id);\n                            setGenres(_.union(arr, genres));\n                          }\n                        }}\n                      />\n                      {_genres}\n                    </label>\n                  </span>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"create_createbutton create_empty_box\"\n          onClick={() => {\n            onCreate();\n          }}\n        >\n          <span>create</span>\n        </div>\n        <Modal\n          visible={craeteModal}\n          onOk={() => {\n            setCraeteModal(false);\n          }}\n          onCancel={() => {\n            setCraeteModal(false);\n          }}\n        ></Modal>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}