{"ast":null,"code":"var _jsxFileName = \"/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: Int!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n    ) {\n      id\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nconst Create = () => {\n  _s();\n\n  const [onCreateMovie, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_MOVIE);\n  console.log(\"Math.random().toString(36).substr(2, 16); > \", Math.random().toString(36).substr(2, 16));\n\n  const _title = useRef(null);\n\n  const _rating = useRef(null);\n\n  const _description_intro = useRef(null);\n\n  const _language = useRef(null);\n\n  const _medium_cover_image = useRef(null);\n\n  const _genres = useRef([]);\n\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: 485583,\n        title: _title.current,\n        rating: _rating.current,\n        description_intro: _description_intro.current,\n        language: _language.current,\n        medium_cover_image: _medium_cover_image.current,\n        genres: _genres.current\n      }\n    });\n  }\n\n  console.log(\"Create >>> \", loading, error, data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654\\uBA85 \\uC785\\uB825\",\n        onChange: e => {\n          _title.current = e.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        minLength: \"3\",\n        placeholder: \"\\uC601\\uD654\\uC124\\uBA85 \\uC785\\uB825\",\n        rows: \"6\",\n        onChange: e => {\n          _description_intro.current = e.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"0\",\n        onChange: e => {\n          _rating.current = e.target.value;\n        },\n        children: ratingMap.map((rating, i) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: rating,\n            children: rating\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"en\",\n        onChange: e => {\n          _language.current = e.target.value;\n        },\n        children: languageMap.map((lang, i) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang,\n            children: lang\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: genresMap.map((genres, i) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: genres,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: genres,\n              onClick: e => {\n                if (_genres.current.includes(e.target.id)) {\n                  const index = _genres.current.indexOf(e.target.id);\n\n                  _genres.current.splice(index, 1);\n                } else {\n                  _genres.current.push(e.target.id);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), genres]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC601\\uD654\\uD3EC\\uC2A4\\uD130 \\uC774\\uBBF8\\uC9C0 \\uB9C1\\uD06C \\uC785\\uB825\",\n        onChange: e => {\n          _medium_cover_image.current = e.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        onCreate();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"+BoTtBMta7a9j5LX26oQOu2WAt8=\", false, function () {\n  return [useMutation];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/sonseongho/Desktop/workspace/react/react-web/apollo-react/src/routes/Create.js"],"names":["React","useRef","gql","useMutation","CREATE_MOVIE","Create","onCreateMovie","loading","error","data","console","log","Math","random","toString","substr","_title","_rating","_description_intro","_language","_medium_cover_image","_genres","ratingMap","languageMap","genresMap","onCreate","variables","id","title","current","rating","description_intro","language","medium_cover_image","genres","display","flexDirection","e","target","value","map","i","lang","includes","index","indexOf","splice","push"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nconst CREATE_MOVIE = gql`\n  mutation getParams(\n    $id: Int!\n    $title: String!\n    $rating: Float\n    $description_intro: String\n    $language: String\n    $medium_cover_image: String\n    $genres: [String]\n  ) {\n    addMovie(\n      id: $id\n      title: $title\n      rating: $rating\n      description_intro: $description_intro\n      language: $language\n      medium_cover_image: $medium_cover_image\n      genres: $genres\n    ) {\n      id\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n  }\n`;\nconst Create = () => {\n  const [onCreateMovie, { loading, error, data }] = useMutation(CREATE_MOVIE);\n  console.log(\n    \"Math.random().toString(36).substr(2, 16); > \",\n    Math.random().toString(36).substr(2, 16)\n  );\n  const _title = useRef(null);\n  const _rating = useRef(null);\n  const _description_intro = useRef(null);\n  const _language = useRef(null);\n  const _medium_cover_image = useRef(null);\n  const _genres = useRef([]);\n\n  const ratingMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  const languageMap = [\"en\", \"ko\", \"co\", \"jp\"];\n  const genresMap = [\"drama\", \"action\", \"comic\", \"romance\"];\n\n  function onCreate() {\n    onCreateMovie({\n      variables: {\n        id: 485583,\n        title: _title.current,\n        rating: _rating.current,\n        description_intro: _description_intro.current,\n        language: _language.current,\n        medium_cover_image: _medium_cover_image.current,\n        genres: _genres.current,\n      },\n    });\n  }\n\n  console.log(\"Create >>> \", loading, error, data);\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"영화명 입력\"\n          onChange={(e) => {\n            _title.current = e.target.value;\n          }}\n        />\n      </div>\n      <div>\n        <textarea\n          minLength=\"3\"\n          placeholder=\"영화설명 입력\"\n          rows=\"6\"\n          onChange={(e) => {\n            _description_intro.current = e.target.value;\n          }}\n        />\n      </div>\n      <div>\n        <select\n          defaultValue=\"0\"\n          onChange={(e) => {\n            _rating.current = e.target.value;\n          }}\n        >\n          {ratingMap.map((rating, i) => {\n            return (\n              <option key={i} value={rating}>\n                {rating}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div>\n        <select\n          defaultValue=\"en\"\n          onChange={(e) => {\n            _language.current = e.target.value;\n          }}\n        >\n          {languageMap.map((lang, i) => {\n            return (\n              <option key={i} value={lang}>\n                {lang}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div>\n        {genresMap.map((genres, i) => {\n          return (\n            <span key={i}>\n              <label htmlFor={genres}>\n                <input\n                  type=\"checkbox\"\n                  id={genres}\n                  onClick={(e) => {\n                    if (_genres.current.includes(e.target.id)) {\n                      const index = _genres.current.indexOf(e.target.id);\n                      _genres.current.splice(index, 1);\n                    } else {\n                      _genres.current.push(e.target.id);\n                    }\n                  }}\n                />\n                {genres}\n              </label>\n            </span>\n          );\n        })}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"영화포스터 이미지 링크 입력\"\n          onChange={(e) => {\n            _medium_cover_image.current = e.target.value;\n          }}\n        />\n      </div>\n      <div\n        onClick={() => {\n          onCreate();\n        }}\n      >\n        <span>create</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}